{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import router from 'vue-router'\nexport default {\n  name: 'Logintest',\n  data() {\n    return {\n      input: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    login() {\n      //make sure username OR password are not empty\n      if (this.input.username != \"\" || this.input.password != \"\") {\n        console.log(\"authenticated\");\n        this.$session.start();\n        this.$session.set(\"username\", this.input.username);\n        console.log(this.$session.get(\"username\"));\n        this.$router.push({\n          path: '/member'\n        }).then(() => {\n          this.$router.go();\n        });\n        //   Vue.http.headers.common['Authorization'] = 'Bearer ' + this.input.username\n        //   this.$router.push('/panel/search')\n      } else {\n        console.log(\"Username and Password can not be empty\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","input","username","password","methods","login","console","log","$session","start","set","get","$router","push","path","then","go"],"sources":["src/views/Logintest.vue"],"sourcesContent":["<template>\r\n  <form name=\"login-form\" style=\"background:white;\">\r\n          <div class=\"mb-3\">\r\n             <label for=\"username\">Username: </label>\r\n             <input type=\"text\" id=\"username\" v-model=\"input.username\" />\r\n         </div>\r\n        <div class=\"mb-3\">\r\n            <label for=\"password\">Password: </label>\r\n            <input type=\"password\" id=\"password\" v-model=\"input.password\" />\r\n        </div>\r\n          <button class=\"btn btn-outline-dark\" type=\"submit\" v-on:click.prevent = \"login()\">\r\n            Login\r\n          </button>\r\n\r\n          <p>Username is: {{input.username}}</p>\r\n          <p>Password is: {{input.password}}</p>\r\n        </form>\r\n</template>\r\n\r\n<script>\r\n// import router from 'vue-router'\r\nexport default {\r\n  name: 'Logintest',\r\n  data(){\r\n    return{\r\n        input:{\r\n            username: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n  },\r\n  methods:{\r\n    login(){\r\n      //make sure username OR password are not empty\r\n      if(this.input.username != \"\" || this.input.password != \"\"){\r\n        console.log(\"authenticated\")\r\n        this.$session.start()\r\n              this.$session.set(\"username\", this.input.username)\r\n              console.log(this.$session.get(\"username\")); \r\n              this.$router\r\n                .push({ path: '/member' })\r\n                .then(() => { this.$router.go() })\r\n            //   Vue.http.headers.common['Authorization'] = 'Bearer ' + this.input.username\r\n            //   this.$router.push('/panel/search')\r\n      }else{\r\n        console.log(\"Username and Password can not be empty\")\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":";AAoBA;AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;QACAC,QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA;MACA,SAAAJ,KAAA,CAAAC,QAAA,eAAAD,KAAA,CAAAE,QAAA;QACAG,OAAA,CAAAC,GAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;QACA,KAAAD,QAAA,CAAAE,GAAA,kBAAAT,KAAA,CAAAC,QAAA;QACAI,OAAA,CAAAC,GAAA,MAAAC,QAAA,CAAAG,GAAA;QACA,KAAAC,OAAA,CACAC,IAAA;UAAAC,IAAA;QAAA,GACAC,IAAA;UAAA,KAAAH,OAAA,CAAAI,EAAA;QAAA;QACA;QACA;MACA;QACAV,OAAA,CAAAC,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}